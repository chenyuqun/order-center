<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zizaike.trade.dao.PayMapper" >
  <resultMap id="BaseResultMap" type="com.zizaike.entity.trade.Pay" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="ip" property="ip" jdbcType="VARCHAR" />
    <result column="out_pay_no" property="outPayNo" jdbcType="VARCHAR" />
    <result column="pay_no" property="payNo" jdbcType="VARCHAR" />
    <result column="pay_account" property="payAccount" jdbcType="VARCHAR" />
    <result column="pay_source" property="paySource" jdbcType="VARCHAR" />
    <result column="pay_status" property="payStatus" typeHandler="com.zizaike.trade.dao.handler.PayStatusHandler"  />
    <result column="callback_time" property="callbackTime" jdbcType="TIMESTAMP" />
    <result column="create_at" property="createAt" jdbcType="TIMESTAMP" />
    <result column="update_at" property="updateAt" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, ip, out_pay_no, pay_no, pay_account, pay_source, pay_status, callback_time, create_at, 
    update_at
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from t_pay
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from t_pay
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.zizaike.entity.trade.Pay" >
    insert into t_pay (id, ip, out_pay_no, 
      pay_no, pay_account, pay_source, 
      pay_status, callback_time, create_at, 
      update_at)
    values (#{id,jdbcType=INTEGER}, #{ip,jdbcType=VARCHAR}, #{outPayNo,jdbcType=VARCHAR}, 
      #{payNo,jdbcType=VARCHAR}, #{payAccount,jdbcType=VARCHAR}, #{paySource,jdbcType=VARCHAR}, 
      #{payStatus,typeHandler=com.zizaike.trade.dao.handler.PayStatusHandler ,javaType=com.zizaike.entity.trade.PayStatus},
      #{callbackTime,jdbcType=TIMESTAMP}, #{createAt,jdbcType=TIMESTAMP}, 
      #{updateAt,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.zizaike.entity.trade.Pay" >
    insert into t_pay
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="ip != null" >
        ip,
      </if>
      <if test="outPayNo != null" >
        out_pay_no,
      </if>
      <if test="payNo != null" >
        pay_no,
      </if>
      <if test="payAccount != null" >
        pay_account,
      </if>
      <if test="paySource != null" >
        pay_source,
      </if>
      <if test="payStatus != null" >
        pay_status,
      </if>
      <if test="callbackTime != null" >
        callback_time,
      </if>
      <if test="createAt != null" >
        create_at,
      </if>
      <if test="updateAt != null" >
        update_at,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="ip != null" >
        #{ip,jdbcType=VARCHAR},
      </if>
      <if test="outPayNo != null" >
        #{outPayNo,jdbcType=VARCHAR},
      </if>
      <if test="payNo != null" >
        #{payNo,jdbcType=VARCHAR},
      </if>
      <if test="payAccount != null" >
        #{payAccount,jdbcType=VARCHAR},
      </if>
      <if test="paySource != null" >
        #{paySource,jdbcType=VARCHAR},
      </if>
      <if test="payStatus != null" >
        #{payStatus,typeHandler=com.zizaike.trade.dao.handler.PayStatusHandler ,javaType=com.zizaike.entity.trade.PayStatus},
      </if>
      <if test="callbackTime != null" >
        #{callbackTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createAt != null" >
        #{createAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updateAt != null" >
        #{updateAt,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.zizaike.entity.trade.Pay" >
    update t_pay
    <set >
      <if test="ip != null" >
        ip = #{ip,jdbcType=VARCHAR},
      </if>
      <if test="outPayNo != null" >
        out_pay_no = #{outPayNo,jdbcType=VARCHAR},
      </if>
      <if test="payNo != null" >
        pay_no = #{payNo,jdbcType=VARCHAR},
      </if>
      <if test="payAccount != null" >
        pay_account = #{payAccount,jdbcType=VARCHAR},
      </if>
      <if test="paySource != null" >
        pay_source = #{paySource,jdbcType=VARCHAR},
      </if>
      <if test="payStatus != null" >
        pay_status = #{payStatus,typeHandler=com.zizaike.trade.dao.handler.PayStatusHandler ,javaType=com.zizaike.entity.trade.PayStatus},
      </if>
      <if test="callbackTime != null" >
        callback_time = #{callbackTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createAt != null" >
        create_at = #{createAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updateAt != null" >
        update_at = #{updateAt,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zizaike.entity.trade.Pay" >
    update t_pay
    set ip = #{ip,jdbcType=VARCHAR},
      out_pay_no = #{outPayNo,jdbcType=VARCHAR},
      pay_no = #{payNo,jdbcType=VARCHAR},
      pay_account = #{payAccount,jdbcType=VARCHAR},
      pay_source = #{paySource,jdbcType=VARCHAR},
      pay_status = #{payStatus,typeHandler=com.zizaike.trade.dao.handler.PayStatusHandler ,javaType=com.zizaike.entity.trade.PayStatus},
      callback_time = #{callbackTime,jdbcType=TIMESTAMP},
      create_at = #{createAt,jdbcType=TIMESTAMP},
      update_at = #{updateAt,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>